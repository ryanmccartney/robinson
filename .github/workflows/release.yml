# .github/workflows/release.yml
name: Build, Release and Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

env:
    HUSKY: 0

jobs:
    check-frontend:
      runs-on: ubuntu-latest
      name: Check Frontend
      steps:
        - name: Checkout source code
          uses: actions/checkout@v4

        - name: Install dependencies
          run: cd ./frontend && npm ci

        - name: Check the formatting
          run: cd ./frontend && npm run format

        - name: Check the linting
          run: cd ./frontend && npm run lint

        - name: Run tests
          run: cd ./frontend && npm run test
          
    check-backend:
      runs-on: ubuntu-latest
      name: Check Backend
      steps:
        - name: Checkout source code
          uses: actions/checkout@v4

        - name: Install dependencies
          run: cd ./backend && npm ci

        - name: Check the formatting
          run: cd ./backend && npm run format

        - name: Check the linting
          run: cd ./backend && npm run lint

        - name: Run tests
          run: cd ./backend && npm run test

    release:
      runs-on: ubuntu-latest
      name: Create Release
      needs:
        - check-backend
        - check-frontend
      steps:
        - name: Checkout source code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Initialize Git user
          run: |
            git config --global user.email "ryan@mccartney.info"
            git config --global user.name "Release Workflow"

        - name: Log git status
          run: git status

        - name: Install the frontend dependencies
          run: cd ./frontend && npm ci
      
        - name: Update frontend version number
          run: cd ./frontend && npm run release --ci

        - name: Install the backend dependencies
          run: cd ./backend && npm ci

        - name: Update the docs
          run: cd ./backend && npm run docs && git add ../docs/assets/api.yml ../docs/pages/api/index.md

        - name: Run release
          run: cd ./backend && npm run release --ci
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    deploy:
      runs-on: ubuntu-latest
      name: Build and Deploy to GHCR
      steps:
        - name: Checkout source code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Fetch latest changes from origin
          run: |
            git fetch --all --tags

        - name: Install the backend dependencies
          run: cd ./backend && npm ci
        - name: Install the frontend dependencies
          run: cd ./frontend && npm ci

        - name: Set current date and time as an environment variable
          run: echo "timestamp=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
        - name: Print current date and time
          run: echo ${{ env.timestamp }}

        - uses: martinbeentjes/npm-get-version-action@master
          name: Get Version Number
          id: version
          with:
              path: ./backend
        - name: Print Current Version
          run: echo Building with version ${{ steps.version.outputs.current-version }}

        - name: Build the frontend
          run: cd ./frontend && npm run build
        - name: Move build files to the backend folder
          run: mkdir ./backend/build && mv ./frontend/build/* ./backend/build/
        - name: Check contents of build folder
          run: ls -l ./backend/build
          
        - name: Login to GHCR Registry
          uses: docker/login-action@v3
          with:
              registry: ${{ env.REGISTRY }}
              username: ${{ github.actor }}
              password: ${{ secrets.GITHUB_TOKEN }}
              logout: false
        
        - name: Build and push to registry
          uses: docker/build-push-action@v6
          with:
              context: "./backend"
              push: ${{ github.event_name != 'pull_request' }}
              tags: |
                  ${{env.REGISTRY}}/ryanmccartney/robinson:latest
                  ${{env.REGISTRY}}/ryanmccartney/robinson:${{steps.version.outputs.current-version}}
              outputs: type=registry
              labels: |
                  author=${{github.actor}}
                  version=${{steps.version.outputs.current-version}}
                  org.opencontainers.image.licenses=GPLv3
                  org.opencontainers.image.url=${{github.server_url}}/${{github.repository}}
                  org.opencontainers.image.source=${{github.server_url}}/${{github.repository}}
                  info.mccartney.ryan.build.timestamp=${{env.timestamp}}
                  info.mccartney.ryan.build.number=${{github.run_number}}
                  info.mccartney.ryan.build.id=${{github.run_id}}
                  info.mccartney.ryan.build.branch=${{github.ref_name}}
                  info.mccartney.ryan.build.commit=${{github.sha}}
                  info.mccartney.ryan.build.repository=${{github.server_url}}/${{github.repository}}
